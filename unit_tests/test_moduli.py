import sys
sys.path.append('../')

from common.helper import *
from common.constants import *

vec_s = [ 1.3465e-01,  1.8226e-01, -1.2055e+00, -4.6733e-01, -6.5480e-01,
          1.0662e+00,  2.0467e-01, -3.3929e-01,  4.5623e-01,  5.9156e-01,
          1.0148e+00,  7.8178e-01, -7.3499e-01,  2.6651e-01, -3.0352e-01,
         -1.7352e+00,  1.5551e+00,  6.5373e-01,  7.3477e-02, -5.1027e-02,
          3.3398e-01, -2.3601e-01,  5.8329e-01, -1.8226e-01,  6.9206e-01,
          1.1673e+00, -3.5010e-01,  6.4367e-01, -5.2294e-01,  8.9362e-01,
          4.0340e-01, -6.5686e-01, -4.0741e-01, -5.8063e-01,  1.5257e+00,
         -3.7010e-01, -3.4595e-01, -1.3854e+00,  2.9075e-01, -1.0208e-01,
         -3.4975e-01, -1.0840e+00, -1.6867e+00,  6.5864e-01,  3.8434e-01,
          1.6665e-01, -1.7118e-01,  6.9514e-01,  2.4174e-01,  5.4498e-01,
          6.8774e-01, -3.2950e-01, -5.0278e-01, -3.0353e-01, -4.1126e-01,
          2.7602e-01, -5.4151e-02, -1.1189e+00,  9.3586e-01,  1.4257e-01,
          3.5132e-01, -8.0884e-01, -1.1151e+00, -1.4562e-01, -3.1755e-01,
          3.8787e-01,  4.1289e-01,  3.5211e-01,  7.2348e-01,  7.2869e-01,
          6.7681e-02, -9.0671e-02, -9.3009e-02,  1.0225e+00,  3.2836e-01,
          1.4868e+00,  5.3220e-01,  6.1374e-01,  1.0153e-02, -1.9075e-01,
          8.5959e-01, -6.3745e-01,  3.3890e-02,  2.3936e-01,  1.0193e+00,
          2.2932e-01, -1.8699e-01,  8.8233e-01, -1.8558e-01, -1.0403e+00,
          4.3237e-01,  1.0712e-01, -4.6151e-02, -4.5855e-01, -4.3214e-01,
          3.0982e-01, -1.0341e+00,  5.8619e-01, -6.6535e-01, -2.0258e-01,
         -7.1151e-01,  1.2168e-01,  2.7538e-01,  1.8865e-01, -5.7463e-01,
         -4.1439e-01, -8.1200e-01,  8.5490e-01, -3.9160e-01, -4.9863e-01,
         -7.4056e-01,  1.1053e-01, -1.5402e-01, -6.3713e-02,  4.8232e-01,
         -1.1239e-01,  4.4532e-01, -6.4461e-01, -2.2409e+00, -2.7803e-01,
         -9.5759e-01, -9.5402e-02,  4.6737e-01,  1.3077e-01, -1.1388e-01,
         -6.9246e-01,  5.7875e-01, -7.5631e-02,  1.3002e+00, -1.7267e+00,
          3.7841e-01,  5.7707e-01, -2.8235e-01,  6.2505e-05, -8.3833e-01,
         -7.5302e-01, -3.6297e-01,  5.5167e-01,  4.7993e-02,  5.1744e-01,
          1.5317e-01, -8.3186e-02, -8.0367e-01, -4.8487e-01, -4.1720e-01,
         -1.0283e+00, -6.7683e-02,  8.9376e-02, -7.9141e-01, -1.2002e-02,
          1.1801e+00,  1.5442e-01, -6.9798e-01,  4.4108e-01, -6.4096e-01,
         -3.0625e-01,  5.9426e-01,  9.4522e-01,  4.8726e-01, -6.8732e-01,
          6.2459e-01, -1.0793e+00, -6.0707e-01, -5.9572e-03, -1.3538e-01,
         -8.8202e-01, -4.7811e-01,  6.2454e-01, -8.6900e-01,  5.8558e-01,
          3.8633e-01, -2.3238e-01,  6.3994e-01, -1.2510e+00, -6.5550e-02,
         -2.2927e-02, -7.6336e-01, -7.1215e-02,  5.1163e-01,  4.3623e-01,
         -3.3553e-01,  6.7929e-01,  5.4134e-01, -2.0762e-01,  5.4063e-01,
         -3.6723e-01,  9.0060e-01, -1.0251e-01,  1.2485e-02, -6.1947e-01,
          5.7010e-02,  1.5188e+00]
vec_v = [-0.4311, -0.6610,  0.3237, -0.6066,  0.0907,  0.8695,  0.4310, -0.5186,
          0.0279,  0.0088, -0.7374,  0.8897, -0.3784, -1.1020, -0.9577, -1.8310,
          0.3430,  0.7249,  0.4717,  0.5961, -0.6717, -0.0407,  0.4891,  0.5754,
          0.1467,  0.9319,  0.4755,  0.2951,  0.5888,  0.7171, -0.1934, -0.3943,
         -0.2586, -1.0029,  1.5522, -0.7328, -1.3432, -1.2324,  1.7950,  0.4735,
         -0.9254,  0.6038, -2.2264,  0.3985,  0.4302, -0.4496,  0.3508,  0.5402,
          0.5102,  0.8058,  0.3811, -0.1285, -0.9731,  0.4912,  0.2029,  1.3248,
          0.8347, -0.9823,  1.1594,  0.2071,  1.7602, -0.4635, -0.5725,  1.4737,
          0.1338,  1.1204, -0.0456, -0.0507,  1.8978, -0.4791,  0.4056,  0.2878,
         -0.0948, -0.2692, -1.2464,  1.4886, -0.1975,  0.9325, -0.5994, -0.2222,
         -0.5744, -0.6979, -0.6798,  0.4718,  0.5269, -0.1994, -0.1477,  0.9388,
         -0.8356,  0.3705, -0.1771, -0.7272,  0.3843,  0.0609, -0.1877,  0.2300,
         -0.7622,  0.4539,  0.2868, -0.2565, -0.3072, -0.7186, -0.1289,  0.0373,
         -0.7661, -0.0832, -1.0303,  0.3202, -0.4745, -0.7932, -1.0395, -0.1665,
         -0.0644, -0.6033,  0.1106,  0.4621, -0.0787, -1.2643, -1.0130,  0.2435,
         -0.4428, -0.1032,  0.3562, -0.3166, -0.8123, -0.7900,  0.6055,  0.4377,
          1.4954, -1.7505,  1.1942,  0.3988,  0.5638,  0.6464, -0.2839, -0.0480,
         -0.6303,  1.1550,  0.4772, -1.3881,  0.3248, -0.7585,  0.9903,  1.0875,
         -0.1449, -2.4425, -0.7438,  0.0413, -1.1647,  0.6386,  0.8022,  0.1689,
         -0.6179, -0.2007, -0.0574, -0.1863,  0.3126,  1.2825, -0.1783, -1.3776,
          0.6946, -1.9969,  0.8866,  0.0762, -1.0342, -0.5336, -1.1586, -0.1379,
         -0.6355, -0.0524,  1.5711,  0.4723, -0.6897, -0.0081, -0.5485, -0.0763,
         -1.1875,  0.6773,  0.6888,  0.4997,  0.3686, -0.0591,  0.0543, -0.7914,
         -0.1281, -0.5193,  1.1478,  0.2721, -0.3419, -0.7612,  0.3668,  1.2587]

def convert_raw(vec):
    ret=[]
    for v in vec:
        v_int = int(v*CONVERSION_FACTOR)
        # print(v_int)
        if v_int>=0:
            ret.append(v_int)
        else:
            ret.append(SEMI_HONEST_MODULO+v_int)
    return ret

vec_s=convert_raw(vec_s)
vec_v=convert_raw(vec_v)

threshold = convert_raw([0.33698207])[0]

def innerProduct(s,v):
    _size = len(s)
    ret=0
    product = vec_mul(s,v,SEMI_HONEST_MODULO)
    for v in product:
        ret = ring_add(ret, v,SEMI_HONEST_MODULO)
    return ret


valTest = ring_mul(vec_s[0],vec_v[0],SEMI_HONEST_MODULO)

# moduloVal_print("one multiple: ", ring_mul(vec_s[0],vec_v[0],SEMI_HONEST_MODULO))




left = innerProduct(vec_s,vec_v)
print("s-v: ",left/(CONVERSION_FACTOR*CONVERSION_FACTOR))

left = ring_mul(left, left,SEMI_HONEST_MODULO)
print("sv*sv: ",left/(CONVERSION_FACTOR*CONVERSION_FACTOR*CONVERSION_FACTOR*CONVERSION_FACTOR))

right= ring_mul(threshold, threshold,SEMI_HONEST_MODULO)
print("right-track: ",right)

ss = innerProduct(vec_s,vec_s)
ss = ring_mul(ss, ss,SEMI_HONEST_MODULO)

right=ring_mul(right, ss,SEMI_HONEST_MODULO)
print("right-track: ",right)

vv = innerProduct(vec_v,vec_v)
vv = ring_mul(vv, vv,SEMI_HONEST_MODULO)

right=ring_mul(right, vv,SEMI_HONEST_MODULO)
print("right-track: ",right)

print("left-right: ", left-right)
